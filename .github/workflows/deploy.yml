# Dependency Review Action
#
# This Action will scan dependency manifest files that change as part of a Pull Request, surfacing known-vulnerable versions of the packages declared or updated in the PR. Once installed, if the workflow run is marked as required, PRs introducing known-vulnerable packages will be blocked from merging.
#
# Source repository: https://github.com/actions/dependency-review-action
# Public documentation: https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review#dependency-review-enforcement
name: 'Dependency Review'
on: [pull_request]

permissions:
  contents: read

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v2name: Deploy to Heroku

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'deploy'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deploy branch
        uses: actions/checkout@v2
        with:
          ref: 'refs/heads/deploy'

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          docker_heroku_process_type: web
          stack: "container"
          region: "eu"
        env:
          HD_OWNER_ID: ${{secrets.OWNER_ID}}
          HD_TELEGRAM_API: ${{secrets.TELEGRAM_API}}
          HD_TELEGRAM_HASH: ${{secrets.TELEGRAM_HASH}}
          HD_DATABASE_URL: ${{secrets.DATABASE_URL}}
          HD_BOT_TOKEN: ${{secrets.BOT_TOKEN}}
          HD_CONFIG_FILE_URL: ${{secrets.CONFIG_FILE_URL}}
